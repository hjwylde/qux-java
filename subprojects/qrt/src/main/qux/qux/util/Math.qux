package qux.util

obj M_INFINITY is obj
obj ZERO is obj
obj INFINITY is obj

{obj} RoundingMode is {M_INFINITY, ZERO, INFINITY}

rat PI is 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989
rat TAU is 2 * PI

void int::abs():
    if this < 0:
        this::negate()

void rat::abs():
    if this < 0.0:
        this::negate()

void A::clamp(A min, A max):
    this = max(min(this, max), min)

void int::toDegrees():
    this *= 180.0 / PI

void rat::toDegrees():
    this *= 180.0 / PI

void int::toRadians():
    this /= 180.0 * PI

void rat::toRadians():
    this /= 180.0 * PI

int abs(int t):
    if t < 0:
        return -t

    return t

rat abs(rat t):
    if t < 0.0:
        return -t

    return t

A clamp(A a, A min, A max):
    return max(min(a, max), min)

A|B max(A a, B b):
    if a >= b:
        return a

    return b

A|B min(A a, B b):
    if a < b:
        return a

    return b

int predecessor(int t):
    return t--

int sign(int t):
    if t == 0:
        return 0
    elif t < 0:
        return -1

    return 1

int sign(rat t):
    if t == 0.0:
        return 0
    elif t < 0.0:
        return -1

    return 1

int successor(int t):
    return t++

rat toDegrees(int rad):
    return rad * 180.0 / PI

rat toDegrees(rat rad):
    return rad * 180.0 / PI

rat toRadians(int deg):
    return deg / 180.0 * PI

rat toRadians(rat deg):
    return deg / 180.0 * PI

